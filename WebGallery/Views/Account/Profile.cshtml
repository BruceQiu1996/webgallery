@model WebGallery.ViewModels.AccountProfileViewModel

@{
    ViewBag.Title = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content">
    <h1>My Contact Information</h1>
    <p>Thank you for your interest in the Web App Gallery. In order to list your application in the Gallery we need your contact information so that Microsoft or our vendors may contact you during the review of your submission.</p>

    <div class="contact-detail-form">
        @using (Html.BeginRouteForm(SiteRouteNames.Profile, FormMethod.Post, new { @id = "publisherdetailsform" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ReturnUrl)

            <div class="contact-detail-field">
                @Html.DropDownListFor(model => model.ContactDetail.Prefix, new List<SelectListItem> { new SelectListItem { Text = "Prefix" }, new SelectListItem { Text = "Mr." }, new SelectListItem { Text = "Mrs." }, new SelectListItem { Text = "Ms." }, new SelectListItem { Text = "Miss" }, new SelectListItem { Text = "Dr." } }, htmlAttributes: new { @class = "dropdown-narrow dd-prefix" })
            </div>

            <div class="contact-detail-field">
                @Html.Label("First Name", htmlAttributes: new { @class = "textbox-label", })
                @Html.EditorFor(model => model.ContactDetail.FirstName, new { htmlAttributes = new { @class = "textbox", placeholder = "First Name" } })
                @Html.ValidationMessageFor(model => model.ContactDetail.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label("Middle Name", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.MiddleName, new { htmlAttributes = new { @class = "textbox", placeholder = "Middle Name" } })
            </div>

            <div class="contact-detail-field">
                @Html.Label("Last Name", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.LastName, new { htmlAttributes = new { @class = "textbox", placeholder = "Last Name" } })
                @Html.ValidationMessageFor(model => model.ContactDetail.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.DropDownListFor(model => model.ContactDetail.Suffix, new List<SelectListItem> { new SelectListItem { Text = "Suffix" }, new SelectListItem { Text = "Jr." }, new SelectListItem { Text = "Sr." } }, htmlAttributes: new { @class = "dropdown-narrow dd-suffix" })
            </div>
            <br />

            <div class="contact-detail-field">
                @Html.Label("Title", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Title, new { htmlAttributes = new { @class = "textbox", placeholder = "Title" } })
            </div>

            <div class="contact-detail-field">
                @Html.Label("eMail", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.EMail, new { htmlAttributes = new { @class = "textbox", placeholder = "eMail" } })
                @Html.ValidationMessageFor(model => model.ContactDetail.EMail, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label("Address 1", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Address1, new { htmlAttributes = new { @class = "textbox", placeholder = "Address 1" } })
                @Html.ValidationMessageFor(model => model.ContactDetail.Address1, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label("Address 2", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Address2, new { htmlAttributes = new { @class = "textbox", placeholder = "Address 2" } })
            </div>

            <div class="contact-detail-field">
                @Html.Label("Address 3", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Address3, new { htmlAttributes = new { @class = "textbox", placeholder = "Address 3" } })
            </div>

            <div class="contact-detail-field">
                @Html.Label("City", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.City, new { htmlAttributes = new { @class = "textbox", placeholder = "City" } })
                @Html.ValidationMessageFor(model => model.ContactDetail.City, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label("Country", htmlAttributes: new { @class = "textbox-label" })
                @Html.DropDownListFor(model => model.ContactDetail.Country, new List<SelectListItem> { new SelectListItem { Value = "0", Text = "Pick one" } }.Concat(Model.Countries), htmlAttributes: new { @class = "dropdown dd-country" })
                @Html.ValidationMessageFor(model => model.ContactDetail.Country, "", new { @class = "text-danger" })
            </div>

            var displayStates = string.Empty;
            var displayProvince = string.Empty;
            if (Model.ContactDetail != null && Model.ContactDetail.Country == "USA")
            {
                displayProvince = "dispaly:none";
            }
            else
            {
                displayStates = "dispaly:none";
            }

            <div class="contact-detail-field" style="@displayStates">
                @Html.Label("State", htmlAttributes: new { @class = "textbox-label", @id = "LBState" })
                @Html.DropDownList("State", new SelectList(new List<SelectListItem> { new SelectListItem { Value = "", Text = "Pick one" } }.Concat(Model.States), "Value", "Text", "0"), htmlAttributes: new { @class = "dropdown dd-country" })
                @Html.ValidationMessageFor(model => model.ContactDetail.StateOrProvince, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field" style="@displayProvince">
                @Html.Label("", "State,Province,etc.", new { @class = "textbox-label", @id = "LBProvince" })
                @Html.EditorFor(model => model.ContactDetail.StateOrProvince, new { htmlAttributes = new { @class = "textbox" } })
            </div>

            <div class="contact-detail-field">
                @Html.Label("ZIP or Region Code", htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.ZipOrRegionCode, new { htmlAttributes = new { @class = "textbox", placeholder = "ZIP or Region Code" } })
                @Html.ValidationMessageFor(model => model.ContactDetail.ZipOrRegionCode, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                <input type="submit" value="Submit Your Contact Information" id="submit" class="submit-button" />
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/js/account-profile-form")
}

@section Styles {
    @Styles.Render("~/css/account-profile-form")
}

@model WebGallery.ViewModels.AccountMeViewModel

@{
    ViewBag.Title = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var prefixList = "ja".Equals(UICulture.Substring(0, 2)) ? new List<SelectListItem> { new SelectListItem { Value = "Prefix", Text = Resources.AccountMe.PrefixDefaultText }, new SelectListItem { Value = "Dr.", Text = Resources.AccountMe.PrefixDrText } } :
        new List<SelectListItem> { new SelectListItem { Value = "Prefix", Text = Resources.AccountMe.PrefixDefaultText }, new SelectListItem { Value = "Mr.", Text = Resources.AccountMe.PrefixMrText }, new SelectListItem { Value = "Mrs.", Text = Resources.AccountMe.PrefixMrsText }, new SelectListItem { Value = "Ms.", Text = Resources.AccountMe.PrefixMsText }, new SelectListItem { Value = "Miss", Text = Resources.AccountMe.PrefixMissText }, new SelectListItem { Value = "Dr.", Text = Resources.AccountMe.PrefixDrText } };
}
<div class="content">
    <h2>@Resources.AccountMe.AboutMeTitle</h2>
    <p>@Resources.AccountMe.AboutMeIntroMsg</p>

    <div class="contact-detail-form">
        @using (Html.BeginRouteForm(SiteRouteNames.Profile, FormMethod.Post, new { @id = "publisherdetailsform" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ReturnUrl)

            <div class="contact-detail-field">
                @Html.DropDownListFor(model => model.ContactDetail.Prefix, prefixList, htmlAttributes: new { @class = "dropdown-narrow dd-prefix" })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.FirstNameLabel, htmlAttributes: new { @class = "textbox-label", })
                @Html.EditorFor(model => model.ContactDetail.FirstName, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.FirstNameLabel } })
                @Html.ValidationMessageFor(model => model.ContactDetail.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.MiddleNameLabel, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.MiddleName, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.MiddleNameLabel } })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.LastNameLabel, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.LastName, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.LastNameLabel } })
                @Html.ValidationMessageFor(model => model.ContactDetail.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.DropDownListFor(model => model.ContactDetail.Suffix, new List<SelectListItem> { new SelectListItem { Value = "Suffix", Text = Resources.AccountMe.SuffixDefaultText }, new SelectListItem { Value = "Jr.", Text = Resources.AccountMe.SuffixJrText }, new SelectListItem { Value = "Sr.", Text = Resources.AccountMe.SuffixSrText } }, htmlAttributes: new { @class = "dropdown-narrow dd-suffix" })
            </div>
            <br />

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.TitleLabel, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Title, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.TitleLabel } })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.eMailLabel, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.EMail, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.eMailLabel } })
                @Html.ValidationMessageFor(model => model.ContactDetail.EMail, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.Address1Label, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Address1, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.Address1Label } })
                @Html.ValidationMessageFor(model => model.ContactDetail.Address1, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.Address2Label, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Address2, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.Address2Label } })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.Address3Label, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.Address3, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.Address3Label } })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.CityLabel, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.City, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.CityLabel } })
                @Html.ValidationMessageFor(model => model.ContactDetail.City, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.CountryLabel, htmlAttributes: new { @class = "textbox-label" })
                @Html.DropDownListFor(model => model.ContactDetail.Country, new List<SelectListItem> { new SelectListItem { Value = "0", Text = Resources.AccountMe.DropdownDefaultText } }.Concat(Model.Countries), htmlAttributes: new { @class = "dropdown dd-country" })
                @Html.ValidationMessageFor(model => model.ContactDetail.Country, "", new { @class = "text-danger" })
            </div>

            var displayStates = string.Empty;
            var displayProvince = string.Empty;
            if (Model.ContactDetail != null && "USA".Equals(Model.ContactDetail.Country))
            {
                displayProvince = "dispaly:none";
            }
            else
            {
                displayStates = "dispaly:none";
            }

            <div class="contact-detail-field" style="@displayStates">
                @Html.Label(Resources.AccountMe.StateLabel, htmlAttributes: new { @class = "textbox-label", @id = "LBState" })
                @Html.DropDownList("State", new SelectList(new List<SelectListItem> { new SelectListItem { Value = "", Text = Resources.AccountMe.DropdownDefaultText } }.Concat(Model.States), "Value", "Text", "0"), htmlAttributes: new { @class = "dropdown dd-country" })
                @Html.ValidationMessageFor(model => model.ContactDetail.StateOrProvince, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field" style="@displayProvince">
                @Html.Label("", Resources.AccountMe.ProvinceLabel, new { @class = "textbox-label", @id = "LBProvince" })
                @Html.EditorFor(model => model.ContactDetail.StateOrProvince, new { htmlAttributes = new { @class = "textbox" } })
            </div>

            <div class="contact-detail-field">
                @Html.Label(Resources.AccountMe.ZipRegionCodeLabel, htmlAttributes: new { @class = "textbox-label" })
                @Html.EditorFor(model => model.ContactDetail.ZipOrRegionCode, new { htmlAttributes = new { @class = "textbox", placeholder = Resources.AccountMe.ZipRegionCodeLabel } })
                @Html.ValidationMessageFor(model => model.ContactDetail.ZipOrRegionCode, "", new { @class = "text-danger" })
            </div>

            <div class="contact-detail-field">
                <input type="submit" value="@Resources.AccountMe.SubmittContactInfoButtonText" id="submit" class="submit-button" />
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/js/account-me")
}

@section Styles {
    @Styles.Render("~/css/account-me")
}